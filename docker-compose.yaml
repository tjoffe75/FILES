services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: files-frontend:latest
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: files-backend:latest
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/filesdb
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - CLAMAV_HOST=clamav
      - CLAMAV_PORT=3310
    depends_on:
      - postgres
      - rabbitmq
      - clamav

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  clamav:
    image: mkodockx/docker-clamav:alpine
    ports:
      - "3310:3310"
    healthcheck:
      test: ["CMD", "clamdscan", "--version"]
      interval: 1m
      timeout: 30s
      retries: 3

  worker:
    build:
      context: ./workers
      dockerfile: Dockerfile
    image: files-worker:latest
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/filesdb
      - CLAMAV_HOST=clamav
      - CLAMAV_PORT=3310
    depends_on:
      - rabbitmq
      - clamav
      - postgres

  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_DB: filesdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/db-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  pgdata:
